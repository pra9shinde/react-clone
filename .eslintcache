[{"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\index.js":"1","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\reportWebVitals.js":"2","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\ApolloProvider.js":"3","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\context\\auth.js":"4","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\config.js":"5","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\App.js":"6","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Home\\Home.jsx":"7","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Login\\Login.jsx":"8","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Sidebar\\Sidebar.js":"9","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Loader\\Loader.js":"10","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\Widgets.jsx":"11","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Feed.jsx":"12","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Register\\Register.jsx":"13","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Sidebar\\SidebarOption\\SidebarOption.jsx":"14","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Sidebar\\SidebarModal\\SidebarModal.jsx":"15","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\Post.jsx":"16","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\TweetBox\\TweetBox.jsx":"17","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\WidgetBox\\WidgetBox.jsx":"18","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\WidgetBox\\TrendingRow\\TrendingRow.jsx":"19","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\WidgetBox\\FollowRow\\FollowRow.jsx":"20","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\LikeButton\\LikeButton.jsx":"21","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\util\\graphqlQueries.js":"22","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\SinglePost\\SinglePost.jsx":"23","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\PrivateRoute.js":"24","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\ServerDownError\\ServerDownError.jsx":"25","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\DeleteButton\\DeleteButton.jsx":"26","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Modal\\Modal.jsx":"27","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\ReplyPost\\CommentedPost.jsx":"28"},{"size":663,"mtime":1613227896794,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1610862026626,"results":"31","hashOfConfig":"30"},{"size":1031,"mtime":1616899492633,"results":"32","hashOfConfig":"30"},{"size":1544,"mtime":1613227896791,"results":"33","hashOfConfig":"30"},{"size":146,"mtime":1613227896785,"results":"34","hashOfConfig":"30"},{"size":897,"mtime":1615132093933,"results":"35","hashOfConfig":"30"},{"size":362,"mtime":1611813779531,"results":"36","hashOfConfig":"30"},{"size":6046,"mtime":1613227896783,"results":"37","hashOfConfig":"30"},{"size":3614,"mtime":1616838528543,"results":"38","hashOfConfig":"30"},{"size":1216,"mtime":1613227896782,"results":"39","hashOfConfig":"30"},{"size":2816,"mtime":1611886322882,"results":"40","hashOfConfig":"30"},{"size":2263,"mtime":1617327728146,"results":"41","hashOfConfig":"30"},{"size":8174,"mtime":1613351107903,"results":"42","hashOfConfig":"30"},{"size":324,"mtime":1616838406943,"results":"43","hashOfConfig":"30"},{"size":1156,"mtime":1616466623123,"results":"44","hashOfConfig":"30"},{"size":3135,"mtime":1617341018332,"results":"45","hashOfConfig":"30"},{"size":6761,"mtime":1616895390487,"results":"46","hashOfConfig":"30"},{"size":239,"mtime":1611813779536,"results":"47","hashOfConfig":"30"},{"size":540,"mtime":1611813779535,"results":"48","hashOfConfig":"30"},{"size":989,"mtime":1611813779535,"results":"49","hashOfConfig":"30"},{"size":2144,"mtime":1617239202881,"results":"50","hashOfConfig":"30"},{"size":1686,"mtime":1617340644702,"results":"51","hashOfConfig":"30"},{"size":13461,"mtime":1617346618192,"results":"52","hashOfConfig":"30"},{"size":442,"mtime":1615132341520,"results":"53","hashOfConfig":"30"},{"size":425,"mtime":1616333219715,"results":"54","hashOfConfig":"30"},{"size":4723,"mtime":1617349916880,"results":"55","hashOfConfig":"30"},{"size":1364,"mtime":1616380620240,"results":"56","hashOfConfig":"30"},{"size":5721,"mtime":1617345315612,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1vpqmz9",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\index.js",[],["117","118"],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\reportWebVitals.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\ApolloProvider.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\context\\auth.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\config.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\App.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Home\\Home.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Login\\Login.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Sidebar\\Sidebar.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Loader\\Loader.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\Widgets.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Feed.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Register\\Register.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Sidebar\\SidebarOption\\SidebarOption.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Sidebar\\SidebarModal\\SidebarModal.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\Post.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\TweetBox\\TweetBox.jsx",["119"],"import React, { useState, useContext, useRef } from 'react';\r\nimport './TweetBox.css';\r\nimport { Button, Avatar } from '@material-ui/core';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport MoodIcon from '@material-ui/icons/Mood';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport Loader from '../../Loader/Loader';\r\n\r\nimport { AuthContext } from '../../../context/auth';\r\nimport config from '../../../config';\r\nimport { useMutation, gql } from '@apollo/client';\r\nimport { FETCH_POSTS_QUERY } from '../../../util/graphqlQueries';\r\n\r\nconst TweetBox = ({ modal, isComment, replyingTo, callback }) => {\r\n    const { user } = useContext(AuthContext);\r\n\r\n    const [errors, setErrors] = useState('');\r\n    const [showLoader, setShowLoader] = useState(false);\r\n    const [inputFocus, setInputFocus] = useState(false);\r\n    const inputFocusedHandler = () => {\r\n        setInputFocus(!inputFocus);\r\n    };\r\n\r\n    const [values, setValues] = useState({\r\n        body: '',\r\n        image: false,\r\n    });\r\n\r\n    const inputFile = useRef(null);\r\n\r\n    const inputChangeHandler = (event) => {\r\n        setValues({ ...values, [event.target.name]: event.target.value });\r\n    };\r\n\r\n    const openFileDialog = () => {\r\n        inputFile.current.click();\r\n    };\r\n\r\n    const fileDialogChange = (event) => {\r\n        setValues({ ...values, image: !values.image });\r\n\r\n        var oFReader = new FileReader();\r\n        oFReader.readAsDataURL(document.getElementById('image').files[0]);\r\n\r\n        oFReader.onload = function (oFREvent) {\r\n            document.getElementById('uploadPreview').src = oFREvent.target.result;\r\n        };\r\n    };\r\n\r\n    // Apollo POST Request\r\n    const [createPost] = useMutation(CREATE_POST, {\r\n        onCompleted: (res) => {\r\n            document.getElementById('tweetbox-form').reset();\r\n            const uploadEl = document.getElementById('uploadPreview');\r\n            if (uploadEl) {\r\n                uploadEl.src = '';\r\n            }\r\n            setValues({ ...values, image: false });\r\n            setShowLoader(false);\r\n            if (callback) callback(); //close the comment modal\r\n        },\r\n        onError: (err) => {\r\n            console.log(err);\r\n            // const displayError = err.graphQLErrors[0].message ? err.graphQLErrors[0].message : err;\r\n            // setErrors(displayError);\r\n            setShowLoader(false);\r\n            if (callback) callback(); //close the comment modal\r\n        },\r\n        update: (proxy, result) => {\r\n            // Access Cache Data so no need to refetch again from server\r\n            const data = proxy.readQuery({\r\n                query: FETCH_POSTS_QUERY,\r\n            });\r\n\r\n            if (data) {\r\n                let newData = [...data.getPosts]; //get old posts from cache\r\n                newData = [result.data.createPost, ...newData]; //append new post data\r\n\r\n                proxy.writeQuery({\r\n                    query: FETCH_POSTS_QUERY,\r\n                    data: {\r\n                        ...data,\r\n                        getPosts: { newData },\r\n                    },\r\n                }); //update cache with newly updated data\r\n            }\r\n        },\r\n    });\r\n\r\n    const postSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        setShowLoader(true);\r\n        const fileEl = document.getElementById('image');\r\n        const file = fileEl.files[0];\r\n\r\n        if (isComment && replyingTo) {\r\n            createPost({ variables: { ...values, image: file, isComment, replyingTo } });\r\n        } else {\r\n            createPost({ variables: { ...values, image: file } });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='tweetBox'>\r\n            <form onSubmit={postSubmitHandler} id='tweetbox-form'>\r\n                <div className={`tweetBox__input ${inputFocus ? 'active' : ''}`}>\r\n                    <Avatar src={`${config.STATIC_FILES_URL}/${user.profilePic}`} />\r\n                    <input\r\n                        type='text'\r\n                        name='body'\r\n                        placeholder={modal ? 'Tweet your reply' : \"What's happening?\"}\r\n                        onFocus={inputFocusedHandler}\r\n                        onBlur={inputFocusedHandler}\r\n                        onChange={inputChangeHandler}\r\n                    />\r\n                </div>\r\n\r\n                <input type='file' name='image' id='image' ref={inputFile} style={{ display: 'none' }} onChange={fileDialogChange} />\r\n                {values.image ? <img alt='' id='uploadPreview' /> : null}\r\n\r\n                {errors && (\r\n                    <div className='errors'>\r\n                        <p>{errors}</p>\r\n                    </div>\r\n                )}\r\n\r\n                <div className='tweetBox__submit'>\r\n                    <div className='tweetBox__submit-left'>\r\n                        <div className='icon' onClick={openFileDialog}>\r\n                            <PhotoLibraryIcon />\r\n                        </div>\r\n                        <div className='icon'>\r\n                            <GifIcon />\r\n                        </div>\r\n\r\n                        <div className='icon'>\r\n                            <PollIcon />\r\n                        </div>\r\n\r\n                        <div className='icon'>\r\n                            <MoodIcon />\r\n                        </div>\r\n\r\n                        <div className='icon'>\r\n                            <EventIcon />\r\n                        </div>\r\n                    </div>\r\n                    <div className='tweetBox__submit-right'>\r\n                        {showLoader ? (\r\n                            <Loader />\r\n                        ) : (\r\n                            <Button type='submit' className='tweetBox__btn'>\r\n                                Tweet\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CREATE_POST = gql`\r\n    mutation createPost($body: String!, $image: Upload, $isComment: Boolean, $replyingTo: ID) {\r\n        createPost(body: $body, image: $image, isComment: $isComment, replyingTo: $replyingTo) {\r\n            id\r\n            body\r\n            createdAt\r\n            username\r\n            likes {\r\n                id\r\n                username\r\n                createdAt\r\n            }\r\n            likeCount\r\n            comments {\r\n                id\r\n                body\r\n                username\r\n                createdAt\r\n            }\r\n            commentCount\r\n            imageURL\r\n            isComment\r\n            replyingTo\r\n        }\r\n    }\r\n`;\r\n\r\nexport default TweetBox;\r\n","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\WidgetBox\\WidgetBox.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\WidgetBox\\TrendingRow\\TrendingRow.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\WidgetBox\\FollowRow\\FollowRow.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\LikeButton\\LikeButton.jsx",["120"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { useMutation, gql } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './LikeButton.css';\r\nimport { AuthContext } from '../../../../context/auth';\r\n\r\n\r\nconst LikeButton = ({ post, isComment, parentPostId }) => {\r\n    const { user } = useContext(AuthContext);\r\n\r\n    const [liked, setLiked] = useState(false);\r\n    const [animate, setAnimate] = useState(false);\r\n\r\n    const [likePost] = useMutation(LIKE_MUTATION, {\r\n        onCompleted: (res) => {\r\n            setAnimate(true);\r\n            setLiked(!liked);\r\n            setAnimate(false);\r\n        },\r\n        onError: (err) => {\r\n            console.log(err);\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (user && post.likes.find((like) => like.username === user.username)) {\r\n            setLiked(true);\r\n            setAnimate(false);\r\n        } else {\r\n            setLiked(false);\r\n        }\r\n    }, [user, post.likes]);\r\n\r\n    const likeHandler = () => {\r\n        likePost({ variables: { postId: post.id } });\r\n        if (liked) {\r\n            setAnimate(false);\r\n        }\r\n    };\r\n\r\n    return user ? (\r\n        <div className='post__footer__like__btn '>\r\n            <div className={`like-btn-svg ${liked ? 'active animate' : ''}`} onClick={likeHandler}></div>\r\n            <span>{post.likeCount}</span>\r\n        </div>\r\n    ) : (\r\n        // <div className={`post__footer__option like ${liked ? 'active' : ''}`} onClick={likeHandler}>\r\n        //     <FavoriteBorder fontSize='small' />\r\n        //     <span>{post.likeCount}</span>\r\n        // </div>\r\n        <Link to='/login'>\r\n            <div className='post__footer__like__btn '>\r\n                <div className={`like-btn-svg`}></div>\r\n                <span>{post.likeCount}</span>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nconst LIKE_MUTATION = gql`\r\n    mutation likePost($postId: ID!) {\r\n        likePost(postId: $postId) {\r\n            id\r\n            likes {\r\n                id\r\n                username\r\n            }\r\n            likeCount\r\n        }\r\n    }\r\n`;\r\n\r\nexport default LikeButton;\r\n","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\util\\graphqlQueries.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\SinglePost\\SinglePost.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\PrivateRoute.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\ServerDownError\\ServerDownError.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\DeleteButton\\DeleteButton.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Modal\\Modal.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\ReplyPost\\CommentedPost.jsx",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":19,"column":20,"nodeType":"127","messageId":"128","endLine":19,"endColumn":29},{"ruleId":"125","severity":1,"message":"129","line":13,"column":12,"nodeType":"127","messageId":"128","endLine":13,"endColumn":19},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'setErrors' is assigned a value but never used.","Identifier","unusedVar","'animate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]