[{"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\index.js":"1","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\reportWebVitals.js":"2","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\ApolloProvider.js":"3","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\context\\auth.js":"4","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\config.js":"5","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\App.js":"6","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Home\\Home.jsx":"7","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Login\\Login.jsx":"8","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Sidebar\\Sidebar.js":"9","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Loader\\Loader.js":"10","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\Widgets.jsx":"11","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Feed.jsx":"12","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Register\\Register.jsx":"13","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Sidebar\\SidebarOption\\SidebarOption.jsx":"14","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Sidebar\\SidebarModal\\SidebarModal.jsx":"15","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\Post.jsx":"16","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\TweetBox\\TweetBox.jsx":"17","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\WidgetBox\\WidgetBox.jsx":"18","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\WidgetBox\\TrendingRow\\TrendingRow.jsx":"19","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\WidgetBox\\FollowRow\\FollowRow.jsx":"20","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\LikeButton\\LikeButton.jsx":"21","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\util\\graphqlQueries.js":"22","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\SinglePost\\SinglePost.jsx":"23","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\PrivateRoute.js":"24","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\ServerDownError\\ServerDownError.jsx":"25","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\DeleteButton\\DeleteButton.jsx":"26","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Modal\\Modal.jsx":"27"},{"size":663,"mtime":1613227896794,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1610862026626,"results":"30","hashOfConfig":"29"},{"size":1031,"mtime":1616465935057,"results":"31","hashOfConfig":"29"},{"size":1544,"mtime":1613227896791,"results":"32","hashOfConfig":"29"},{"size":146,"mtime":1613227896785,"results":"33","hashOfConfig":"29"},{"size":897,"mtime":1615132093933,"results":"34","hashOfConfig":"29"},{"size":362,"mtime":1611813779531,"results":"35","hashOfConfig":"29"},{"size":6046,"mtime":1613227896783,"results":"36","hashOfConfig":"29"},{"size":3614,"mtime":1616838528543,"results":"37","hashOfConfig":"29"},{"size":1216,"mtime":1613227896782,"results":"38","hashOfConfig":"29"},{"size":2816,"mtime":1611886322882,"results":"39","hashOfConfig":"29"},{"size":1794,"mtime":1616333334548,"results":"40","hashOfConfig":"29"},{"size":8174,"mtime":1613351107903,"results":"41","hashOfConfig":"29"},{"size":324,"mtime":1616838406943,"results":"42","hashOfConfig":"29"},{"size":1156,"mtime":1616466623123,"results":"43","hashOfConfig":"29"},{"size":2926,"mtime":1616723806498,"results":"44","hashOfConfig":"29"},{"size":6188,"mtime":1616225896739,"results":"45","hashOfConfig":"29"},{"size":239,"mtime":1611813779536,"results":"46","hashOfConfig":"29"},{"size":540,"mtime":1611813779535,"results":"47","hashOfConfig":"29"},{"size":989,"mtime":1611813779535,"results":"48","hashOfConfig":"29"},{"size":2119,"mtime":1616467479648,"results":"49","hashOfConfig":"29"},{"size":528,"mtime":1616637030474,"results":"50","hashOfConfig":"29"},{"size":14267,"mtime":1616723783467,"results":"51","hashOfConfig":"29"},{"size":442,"mtime":1615132341520,"results":"52","hashOfConfig":"29"},{"size":425,"mtime":1616333219715,"results":"53","hashOfConfig":"29"},{"size":3945,"mtime":1616837996525,"results":"54","hashOfConfig":"29"},{"size":1364,"mtime":1616380620240,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1vpqmz9",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\index.js",[],["113","114"],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\reportWebVitals.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\ApolloProvider.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\context\\auth.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\config.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\App.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Home\\Home.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Login\\Login.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Sidebar\\Sidebar.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Loader\\Loader.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\Widgets.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Feed.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Register\\Register.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Sidebar\\SidebarOption\\SidebarOption.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Sidebar\\SidebarModal\\SidebarModal.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\Post.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\TweetBox\\TweetBox.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\WidgetBox\\WidgetBox.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\WidgetBox\\TrendingRow\\TrendingRow.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Widgets\\WidgetBox\\FollowRow\\FollowRow.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\LikeButton\\LikeButton.jsx",["115"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { useMutation, gql } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './LikeButton.css';\r\nimport { AuthContext } from '../../../../context/auth';\r\n\r\n\r\nconst LikeButton = ({ post }) => {\r\n    const { user } = useContext(AuthContext);\r\n\r\n    const [liked, setLiked] = useState(false);\r\n    const [animate, setAnimate] = useState(false);\r\n\r\n    const [likePost] = useMutation(LIKE_MUTATION, {\r\n        onCompleted: (res) => {\r\n            setAnimate(true);\r\n            setLiked(!liked);\r\n            setAnimate(false);\r\n        },\r\n        onError: (err) => {\r\n            console.log(err);\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (user && post.likes.find((like) => like.username === user.username)) {\r\n            setLiked(true);\r\n            setAnimate(false);\r\n        } else {\r\n            setLiked(false);\r\n        }\r\n    }, [user, post.likes]);\r\n\r\n    const likeHandler = () => {\r\n        likePost({ variables: { postId: post.id } });\r\n        if (liked) {\r\n            setAnimate(false);\r\n        }\r\n    };\r\n\r\n    return user ? (\r\n        <div className='post__footer__like__btn '>\r\n            <div className={`like-btn-svg ${liked ? 'active animate' : ''}`} onClick={likeHandler}></div>\r\n            <span>{post.likeCount}</span>\r\n        </div>\r\n    ) : (\r\n        // <div className={`post__footer__option like ${liked ? 'active' : ''}`} onClick={likeHandler}>\r\n        //     <FavoriteBorder fontSize='small' />\r\n        //     <span>{post.likeCount}</span>\r\n        // </div>\r\n        <Link to='/login'>\r\n            <div className='post__footer__like__btn '>\r\n                <div className={`like-btn-svg`}></div>\r\n                <span>{post.likeCount}</span>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nconst LIKE_MUTATION = gql`\r\n    mutation likePost($postId: ID!) {\r\n        likePost(postId: $postId) {\r\n            id\r\n            likes {\r\n                id\r\n                username\r\n            }\r\n            likeCount\r\n        }\r\n    }\r\n`;\r\n\r\nexport default LikeButton;\r\n","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\util\\graphqlQueries.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\SinglePost\\SinglePost.jsx",["116"],"import React, { useContext, useState, useRef, useEffect  } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './SinglePost.css';\r\n\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport { ChatBubbleOutline, Repeat } from '@material-ui/icons';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport PostNotFoundImg from '../../assets/images/post-not-found.svg';\r\nimport VerifiedIcon from '../../assets/images/twitter-verified-badge.svg';\r\n\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Widgets from '../Widgets/Widgets';\r\nimport Post from '../Feed/Post/Post';\r\nimport LikeButton from '../Feed/Post/LikeButton/LikeButton';\r\nimport Loader from '../Loader/Loader';\r\nimport Modal from '../Modal/Modal';\r\nimport TweetBox from '../Feed/TweetBox/TweetBox';\r\n\r\nimport config from '../../config';\r\nimport { AuthContext } from '../../context/auth';\r\nimport DeleteButton from '../Feed/Post/DeleteButton/DeleteButton';\r\n\r\nconst SinglePost = (props) => {\r\n    const history = useHistory();\r\n    const ref = useRef(null);\r\n\r\n    const [height, setHeight] = useState(0);\r\n    const [showModal, setshowModal] = useState(false);\r\n\r\n    const postId = props.match.params.postId;\r\n    const { user } = useContext(AuthContext);\r\n\r\n    const toggleModal = (e, overlay) => {\r\n        if (overlay) {\r\n            if (e.target.id !== 'modal__overlay') {\r\n                return;\r\n            } else {\r\n                setshowModal(false);\r\n            }\r\n        } else {\r\n            setshowModal(!showModal);\r\n        }\r\n    };\r\n\r\n    const { data, loading } = useQuery(FETCH_POST, { variables: { postId } });\r\n  \r\n    const deleteCallback = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(showModal){\r\n            setHeight(ref.current.clientHeight - 20);\r\n        }\r\n    }, [showModal]);\r\n\r\n    return (\r\n        <>\r\n            <div className='home'>\r\n                <Sidebar />\r\n                <div className='feed'>\r\n                    <div className='feed__wrapper'>\r\n                        <div className='feed__header singlePost'>\r\n                            <div className='feed__header-back-btn post__footer__option' onClick={() => history.goBack()}>\r\n                                <ArrowBackIcon />\r\n                            </div>\r\n                            <h2>Tweet</h2>\r\n                        </div>\r\n\r\n                        {loading ? (\r\n                            <Loader />\r\n                        ) : (\r\n                            <>\r\n                                {data ? (\r\n                                    <>\r\n                                        <div className='singlePost__container'>\r\n                                            <div className='singlePost__body'>\r\n                                                <div className='singlePost__header'>\r\n                                                    <div className='singlePost__avatar'>\r\n                                                        <Avatar src={`${config.STATIC_FILES_URL}/${data.getPost.user.profilePic}`} />\r\n                                                    </div>\r\n                                                    <div className='post__headerText singlePost'>\r\n                                                        <div className='singlePost__header-top'>\r\n                                                            <h3>{data.getPost.user.name}</h3>\r\n                                                            <span className='post__verified'>\r\n                                                                <img src={VerifiedIcon} alt='' className='verifiedIcon' />\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                        <p className='post__username singlePost'>@{data.getPost.user.username}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='postHeaderDesc singlePost'>\r\n                                                    <p>{data.getPost.body}</p>\r\n                                                    {data.getPost.imageURL && (\r\n                                                        <img\r\n                                                            src={`${config.STATIC_FILES_URL}/${data.getPost.imageURL}`}\r\n                                                            alt=''\r\n                                                            className='post__image'\r\n                                                        />\r\n                                                    )}\r\n                                                    <p className='singlePost__timestamp'>\r\n                                                        {moment(new Date(data.getPost.createdAt)).format(' h:mm A · MMM D, YYYY')}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div className='singlePost__footer'>\r\n                                                    <div className='singlePost__footer-top'>\r\n                                                        <div className='item'>\r\n                                                            <span>1</span> Retweet\r\n                                                        </div>\r\n                                                        <div className='item'>\r\n                                                            <span>{data.getPost.commentCount}</span> Comments\r\n                                                        </div>\r\n                                                        <div className='item'>\r\n                                                            <span>{data.getPost.likeCount}</span> Likes\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='singlePost__footer-bottom'>\r\n                                                        <div className='post__footer__option' onClick={toggleModal}>\r\n                                                            <ChatBubbleOutline fontSize='small' />\r\n                                                            <span>{data.getPost.commentCount}</span>\r\n                                                        </div>\r\n                                                        <div className='post__footer__option retweet'>\r\n                                                            <Repeat fontSize='small' />\r\n                                                            <span>1</span>\r\n                                                        </div>\r\n\r\n                                                        <LikeButton\r\n                                                            post={{\r\n                                                                id: data.getPost.id,\r\n                                                                likes: data.getPost.likes,\r\n                                                                likeCount: data.getPost.likeCount,\r\n                                                            }}\r\n                                                        />\r\n\r\n                                                        <div className='post__footer__option'>\r\n                                                            <ShareIcon fontSize='small' />\r\n                                                        </div>\r\n                                                        {user && data.getPost.user.username === user.username && (\r\n                                                            <DeleteButton postId={data.getPost.id} callback={deleteCallback} />\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {data.getPost.comments.map((comment) => (\r\n                                                <Post\r\n                                                    key={comment.id}\r\n                                                    id={comment.id}\r\n                                                    username={comment.username}\r\n                                                    text={comment.body}\r\n                                                    likeCount={comment.likeCount}\r\n                                                    commentCount={comment.commentCount}\r\n                                                    likes={comment.likes}\r\n                                                    createdAt={comment.createdAt}\r\n                                                    imageURL={comment.imageURL}\r\n                                                    userDetails={comment.user}\r\n                                                    isComment={true}\r\n                                                    parentPostId={data.getPost.id}\r\n                                                />\r\n                                            ))}\r\n                                        </div>\r\n\r\n                                        {/* Reply Modal */}\r\n                                        <Modal showModal={showModal} toggleModal={toggleModal}>\r\n                                            <div className='modal__post' ref={ref} >\r\n                                                <div className='modal__profilePic'>\r\n                                                    <div className='post__avatar modalStyle'>\r\n                                                        <Avatar src={`${config.STATIC_FILES_URL}/${data.getPost.user.profilePic}`} />\r\n                                                    </div>\r\n                                                    <div className='modal__vertical__line' style={{height: height}} ></div>\r\n                                                </div>\r\n\r\n                                                <div className='post__header'>\r\n                                                    <div className='post__headerText'>\r\n                                                        <h3>{data.getPost.user.name}</h3>\r\n                                                        <span className='post__verified'>\r\n                                                            <img src={VerifiedIcon} alt='' className='verifiedIcon' />\r\n                                                        </span>\r\n                                                        <span className='post__username'>@{data.getPost.user.username} · {moment(new Date(data.getPost.createdAt)).fromNow()}</span>\r\n                                                    </div>\r\n                                                    <div className='postHeaderDesc'>\r\n                                                        <p>\r\n                                                            {data.getPost.body}\r\n                                                        </p>\r\n                                                        {data.getPost.imageURL && (\r\n                                                            <img\r\n                                                                src={`${config.STATIC_FILES_URL}/${data.getPost.imageURL}`}\r\n                                                                alt=''\r\n                                                                className='post__image'\r\n                                                            />\r\n                                                        )}\r\n                                                    </div>\r\n                                                    <div className='modal__replyingTo'>\r\n                                                        <p>\r\n                                                            Replying to <span>@{data.getPost.user.username}</span>\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <TweetBox modal={true} />\r\n                                        </Modal>\r\n                                    </>\r\n                                ) : (\r\n                                    <div className='single__post__notfound'>\r\n                                        <h3>Post Not Found!!!</h3>\r\n                                        <img src={PostNotFoundImg} alt='Post deleted or not found' />\r\n                                    </div>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <Widgets />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst FETCH_POST = gql`\r\n    query($postId: ID!) {\r\n        getPost(postId: $postId) {\r\n            id\r\n            body\r\n            createdAt\r\n            username\r\n            likeCount\r\n            likes {\r\n                username\r\n            }\r\n            commentCount\r\n            comments{\r\n                id\r\n                body\r\n                createdAt\r\n                username\r\n                likes{\r\n                    id\r\n                    username\r\n                }\r\n                likeCount\r\n                commentCount\r\n                imageURL\r\n                user{\r\n                    id\r\n                    email\r\n                    username\r\n                    name\r\n                    profilePic\r\n                }\r\n            }\r\n            imageURL\r\n            user {\r\n                id\r\n                email\r\n                username\r\n                createdAt\r\n                name\r\n                profilePic\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default SinglePost;\r\n","I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\PrivateRoute.js",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\ServerDownError\\ServerDownError.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Feed\\Post\\DeleteButton\\DeleteButton.jsx",[],"I:\\Clones\\Twitter Clone\\twitter-clone-frontend\\src\\components\\Modal\\Modal.jsx",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":13,"column":12,"nodeType":"123","messageId":"124","endLine":13,"endColumn":19},{"ruleId":"121","severity":1,"message":"125","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":14},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'animate' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]